services:
  # Webhook Service for Auto-Deployment
  webhook-service:
    build:
      context: ./webhook-service
      dockerfile: Dockerfile
    container_name: flearn_webhook
    restart: unless-stopped
    environment:
      WEBHOOK_SECRET: ${WEBHOOK_SECRET}
      WEBHOOK_PORT: 3001
      PROJECT_PATH: /app/flearn
    ports:
      - "${WEBHOOK_PORT:-3001}:3001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/app/flearn
      - ./logs:/app/flearn/logs
    networks:
      - flearn_network

  # FLEARN Backend API
  flearn-backend:
    build:
      context: ./FLEARN-back
      dockerfile: Dockerfile
      args:
        - CACHEBUST=${CACHEBUST:-1}
    container_name: flearn_backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      POSTGRES_HOST: postgres
      MONGO_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}?authSource=admin
    ports:
      - "${PORT}:8099"
    depends_on:
      - postgres
      - mongodb
    networks:
      - flearn_network

  # FLEARN Frontend (Next.js)
  flearn-frontend:
    build:
      context: ./FLEARN-front
      dockerfile: Dockerfile
      args:
        - CACHEBUST=${CACHEBUST:-1}
    container_name: flearn_frontend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: 3000
      # Override the global PORT variable for frontend
    ports:
      - "3000:3000"
    networks:
      - flearn_network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: flearn_postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./FLEARN-back/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - flearn_network

  # pgAdmin for PostgreSQL management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: flearn_pgadmin
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - flearn_network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: flearn_mongodb
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongodb_data:/data/db
      - ./FLEARN-back/mongo-init:/docker-entrypoint-initdb.d
    networks:
      - flearn_network

  # MongoDB Express (Web-based MongoDB admin interface)
  mongo-express:
    image: mongo-express:latest
    container_name: flearn_mongo_express
    restart: unless-stopped
    env_file:
      - .env
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    ports:
      - "${MONGO_EXPRESS_PORT}:${MONGO_EXPRESS_INTERNAL_PORT}"
    depends_on:
      - mongodb
    networks:
      - flearn_network

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  mongodb_data:
    driver: local

# Custom network
networks:
  flearn_network:
    driver: bridge
